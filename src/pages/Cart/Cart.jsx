import React, { useContext, useState } from "react";
import "./Cart.css";
import { StoreContext } from "../../context/StoreContext";
import { useNavigate } from "react-router-dom";

export const Cart = () => {
  const {
    cartItems,
    food_list,
    combos,
    removeFromCart,
    getTotalCartAmount,
    url,
  } = useContext(StoreContext);
  const navigate = useNavigate();
  const [promoCode, setPromoCode] = useState("");

  // ƒê·ªãnh d·∫°ng ti·ªÅn VND
  const formatVNDSimple = (amount = 0) => amount.toLocaleString("vi-VN");

  // Gom d·ªØ li·ªáu m√≥n ƒÉn + combo l·∫°i
  const allItems = [
    ...food_list.map((item) => ({ ...item, type: "food" })),
    ...combos.map((item) => ({ ...item, type: "combo" })),
  ];

  // L·ªçc c√°c s·∫£n ph·∫©m c√≥ trong gi·ªè
  const filteredItems = allItems.filter((item) => {
    const key = `${item.type}_${item._id}`;
    return cartItems[key] > 0;
  });

  // ‚úÖ H√†m x·ª≠ l√Ω ƒë∆∞·ªùng d·∫´n ·∫£nh ƒë√∫ng cho c·∫£ combo & m√≥n ƒÉn
  const getImageSrc = (item) => {
    if (!item.image) return `${url}/images/no-image.png`; // fallback ·∫£nh r·ªóng
    if (item.image.startsWith("http")) return item.image;

    // N·∫øu l√† combo m√† ch∆∞a c√≥ "images/" ‚Üí t·ª± th√™m
    if (item.type === "combo" && !item.image.startsWith("images/")) {
      return `${url}/images/${item.image}`;
    }

    // N·∫øu l√† m√≥n ƒÉn th√¨ ƒë·ªÉ nguy√™n
    return `${url}/${item.image.replace(/^\/+/, "")}`;
  };

  return (
    <div className="cart">
      <div className="cart-items">
        <div className="cart-items-title">
          <p>S·∫£n ph·∫©m</p>
          <p>T√™n</p>
          <p>Gi√°</p>
          <p>S·ªë l∆∞·ª£ng</p>
          <p>T·ªïng</p>
          <p>X√≥a</p>
        </div>
        <br />
        <hr />

        {filteredItems.length > 0 ? (
          filteredItems.map((item) => {
            const key = `${item.type}_${item._id}`;
            const price = item.discountPrice || item.price;

            return (
              <div key={key}>
                <div className="cart-items-title cart-items-item">
                  <img src={getImageSrc(item)} alt={item.name} />
                  <p>
                    {item.type === "combo" ? `Combo: ${item.name}` : item.name}
                  </p>
                  <p>{formatVNDSimple(price)} VND</p>
                  <p>{cartItems[key]}</p>
                  <p>{formatVNDSimple(price * cartItems[key])} VND</p>
                  <p
                    onClick={() => removeFromCart(item._id, item.type)}
                    className="cross"
                  >
                    x
                  </p>
                </div>
                <hr />
              </div>
            );
          })
        ) : (
          <p className="empty-cart">üõí Gi·ªè h√†ng c·ªßa b·∫°n ƒëang tr·ªëng</p>
        )}
      </div>

      <div className="cart-bottom">
        <div className="cart-total">
          <h2>T·ªïng ti·ªÅn gi·ªè h√†ng</h2>
          <div>
            <div className="cart-total-details">
              <p>T·ªïng ph·ª•</p>
              <p>{formatVNDSimple(getTotalCartAmount())} VND</p>
            </div>
            <hr />
            <div className="cart-total-details">
              <p>Ph√≠ giao h√†ng</p>
              <p>{getTotalCartAmount() === 0 ? "0 VND" : "30.000 VND"}</p>
            </div>
            <hr />
            <div className="cart-total-details">
              <b>T·ªïng c·ªông</b>
              <b>
                {getTotalCartAmount() === 0
                  ? "0 VND"
                  : formatVNDSimple(getTotalCartAmount() + 30000)}{" "}
                VND
              </b>
            </div>
          </div>
          <button
            disabled={filteredItems.length === 0}
            onClick={() => navigate("/order")}
          >
            Ti·∫øn h√†nh thanh to√°n
          </button>
        </div>

        <div className="cart-promocode">
          <div>
            <p>N·∫øu b·∫°n c√≥ m√£ khuy·∫øn m√£i, h√£y nh·∫≠p v√†o ƒë√¢y</p>
            <div className="cart-promocode-input">
              <input
                type="text"
                placeholder="M√£ khuy·∫øn m√£i"
                value={promoCode}
                onChange={(e) => setPromoCode(e.target.value)}
              />
              <button onClick={() => alert(`M√£ khuy·∫øn m√£i: ${promoCode}`)}>
                G·ª≠i
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};
